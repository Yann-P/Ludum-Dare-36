// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  gm.Spike = (function(_super) {

    __extends(Spike, _super);

    function Spike(game, xx, yy, triggers, data) {
      Spike.__super__.constructor.call(this, game, xx, yy, 1, 1, 'spike', 'spike', triggers, data);
      this.alpha = 0;
      this.anchor.setTo(0.5, 0.5);
      this.x += gm.TILE_SIZE / 2;
      this.y += gm.TILE_SIZE / 2;
      if (data.angle) {
        this.angle = +data.angle;
      }
    }

    Spike.prototype.update = function() {
      var allfired;
      Spike.__super__.update.call(this);
      allfired = this.allTriggersFired();
      if (!allfired) {
        this.alpha = 0;
      } else if (this.enabled) {
        this.alpha = 1;
      }
      return this.body.checkCollision.none = allfired && this.enabled ? false : true;
    };

    Spike.prototype.applyEffect = function(sprite) {};

    return Spike;

  })(gm.Trap);

}).call(this);
