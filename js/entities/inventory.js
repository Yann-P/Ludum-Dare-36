// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  gm.Inventory = (function(_super) {

    __extends(Inventory, _super);

    function Inventory(game) {
      this.game = game;
      Inventory.__super__.constructor.call(this, this.game, null, 'inventory');
      this.items = [];
    }

    Inventory.prototype.addItem = function(item_id) {
      this.items.push(+item_id);
      return this.rerender();
    };

    Inventory.prototype.hasItem = function(item_id) {
      return this.items.indexOf(+item_id) !== -1;
    };

    Inventory.prototype.removeItem = function(item_id) {
      var i;
      i = this.items.indexOf(+item_id);
      if (i !== -1) {
        this.items.splice(i, 1);
      }
      return this.rerender();
    };

    Inventory.prototype.rerender = function() {
      var i, item, ratio, s, _i, _len, _ref, _results;
      this.removeAll(true);
      _ref = this.items;
      _results = [];
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        item = _ref[i];
        s = this.game.add.sprite(40 * (i + 1) - 30, 30, 'item_' + item);
        ratio = s.width / s.height;
        s.height = gm.TILE_SIZE;
        s.width = gm.TILE_SIZE * ratio;
        s.fixedToCamera = true;
        _results.push(this.add(s));
      }
      return _results;
    };

    return Inventory;

  })(Phaser.Group);

}).call(this);
