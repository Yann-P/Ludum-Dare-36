// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  gm.Title = (function(_super) {

    __extends(Title, _super);

    function Title() {
      return Title.__super__.constructor.apply(this, arguments);
    }

    Title.prototype.create = function() {
      var _this = this;
      this.backgroud = this.game.add.image(0, 0, 'title');
      this.title = this.game.add.text(450, 50, 'Fix It', {
        fill: 'white',
        font: 'MedievalSharp',
        fontSize: 120,
        fontWeight: "bold"
      });
      this.text = this.game.add.text(380, 300, 'Play or Resume', {
        fill: 'white',
        font: 'MedievalSharp',
        fontSize: 60,
        fontWeight: "bold"
      });
      this.text2 = this.game.add.text(380, 360, 'Erase save', {
        fill: 'white',
        font: 'MedievalSharp',
        fontSize: 60
      });
      this.credits = this.game.add.text(10, 580, 'Pierre Gabon, Yann Pellegrini - 2016', {
        fill: 'white',
        font: 'MedievalSharp',
        fontSize: 18
      });
      this.text.inputEnabled = true;
      this.text.events.onInputDown.add(function() {
        return _this.startFromSave();
      }, this);
      this.text2.inputEnabled = true;
      return this.text2.events.onInputDown.add(function() {
        localStorage.setItem('level', null);
        return window.location.reload();
      });
    };

    Title.prototype.startFromSave = function() {
      var lvl;
      try {
        lvl = localStorage.getItem('level');
        if (!(lvl > 0)) {
          lvl = 1;
        }
        console.log(lvl);
        return this.game.state.start('level', true, false, +lvl);
      } catch (e) {
        console.warn('cant use localstorage');
        return this.game.state.start('level', true, false, 1);
      }
    };

    return Title;

  })(Phaser.State);

}).call(this);
